const musicKit = require("@jasonfleischer/music-model-kit");
const PianoView = require("./lib/piano_view.js");
const log = require("@jasonfleischer/log")

const piano = {

};

piano.buildView = function(options) {

	let id = options.id;
	if (id === undefined){
		log.e('id not provided for piano')
		return
	}

	let pianoView = document.getElementById(id);
	if (pianoView === undefined){
		log.e('not piano exists with id: ' + id)
		return
	}

	if (options.range === undefined){

	}

	if (options.interactive === undefined){

	}

	if (options.width === undefined){
		options.width = 1000
	}


	let height = "230px"

	var canvas = document.createElement('canvas'); 
    canvas.id = "piano_background_canvas_"+id;
    canvas.style.position = "absolute"
    canvas.style.left = "0px"
    canvas.style.right = "0px"
    canvas.style.width = options.width + "px";
	canvas.style.height = height;
    pianoView.appendChild(canvas);

    var canvas = document.createElement('canvas'); 
    canvas.id = "piano_white_keys_canvas_"+id;
    canvas.style.position = "absolute"
    canvas.style.left = "0px"
    canvas.style.right = "0px"
    canvas.style.width = options.width + "px";
	canvas.style.height = height;
    pianoView.appendChild(canvas);

    var canvas = document.createElement('canvas'); 
    canvas.id = "piano_black_keys_canvas_"+id;
    canvas.style.position = "absolute"
    canvas.style.left = "0px"
    canvas.style.right = "0px"
    canvas.style.width = options.width + "px";
	canvas.style.height = height;
    pianoView.appendChild(canvas);


	//pianoView.style.backgroundColor = "grey";
	//pianoView.id = id
	pianoView.style.position = "relative"
	pianoView.style.width = options.width + "px";
	pianoView.style.height = height;

	musicKit.init();
	//build_all_notes();

	let view = new PianoView(id);
	view.resize(options.width);

	return view;
	
}

piano.drawNote = function(midiValue) {
	piano_view.drawNote(musicKit.all_notes[midiValue]);
}

piano.drawChord = function(midiValue) {
	piano_view.drawChord(new musicKit.Chord(musicKit.all_notes[midiValue], musicKit.all_notes));
}

piano.clear = function(midiValue) {
	piano_view.clearCanvases();
}

module.exports = piano;

